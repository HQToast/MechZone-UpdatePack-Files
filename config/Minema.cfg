# Configuration file

####################
# capture
####################

capture {
    # If set to true, make a benchmark run instead of movie capturing.
    B:benchmark=false

    # Recording frame rate, sets the amount of frames recorded per in-game second.
    # Floating point values are allowed, e.g. 23.976 for 24p NTSC.
    # 
    # Because Minecraft operates at 20 ticks per second, frame rates with multiples
    # of 20 are recommended for best smoothness.
    D:fps=30.0

    # Record this many frames at most, then stop recording automatically.
    # Set to 0 for no limitation.
    I:framesLimit=0

    # Path to a directory where the movies are stored.
    # 
    # Placeholders:
    # %MCDIR% - Minecraft root directory.
    S:path=%MCDIR%/movies

    # If set to true, Minema will pause recording as long as the menu or inventory is
    # visible.
    B:pauseOnGUI=false
}


####################
# engine
####################

engine {
    # If set to true, Minema will force the game to freeze until all visible chunks
    # are fully loaded. Camera Studio or similar mods are highly recommended for
    # this option, since smooth camera movements are almost impossible without.
    # 
    # Warning: experimental feature, crashes and undesired side effects with other
    # mods are possible!
    B:chunkPreload=true

    # Sets the maximum entity rendering distance in blocks.
    # 64 is the vanilla value. Higher values allow more entities to
    # be visible in further distances on the cost of performance.
    I:entityDistLimit=1024

    # Sets the maximum amount of particles visible at the same time for one texture
    # before the oldest particles are removed.
    # In vanilla, this limit is hardcoded to 4000. Some scenes, such as mass TNT
    # explosions, generate enormous amounts of particles and require even higher limits.
    # 
    # Set to -1 for no limit.
    I:particleLimit=64000

    # Speed modifier for the game clock. The default is 1.0, which equals 20 ticks
    # per second, lower or higher values will speed up or slow down the game time.
    # 2.5, for example, results in two and a half of the normal speed.
    # Useful for slow motion or time lapse effects.
    D:speed=1.0
}


####################
# overlay
####################

overlay {
    # If set to true, the overlay will also be visible in the captured video.
    B:embed=false

    # If set to true, an overlay with information about the current recording session
    # will be displayed.
    B:enabled=true
}


####################
# video
####################

video {
    # Encoding mode.
    # 0 - Automatically search for an installed and supported encoder and use it, otherwise save the movie as
    #     a collection of image files.
    # 1 - Always save movie as a collection of image files using the format set in images.format.
    # 2 - Always use an external encoder using the values from encoder.path and encoder.params.
    # 3 - Write raw movie data into a single RGB24 file.
    I:encoder.mode=1

    # List of parameters for the external program.
    # 
    # Placeholders:
    # %WIDTH%   - Frame width.
    # %HEIGHT%  - Frame height.
    # %FPS%     - Frame rate.
    # %NAME%    - Suggested movie name without file extension.
    S:encoder.params=--demuxer raw --input-csp rgb --input-res %WIDTH%x%HEIGHT% --fps %FPS% --preset ultrafast --qp 0 -o %NAME%.mp4 -

    # Absolute path to an external program that reads raw RGB24 frames over a pipe.
    # 
    # Note: always use "/" or "\\" instead of "\", even on Windows!
    # 
    # Placeholders:
    # %MCDIR%   - Minecraft root directory.
    # 
    # The program's working directory will be capture.path.
    S:encoder.path=%MCDIR%/bin/x264.exe

    # Sets the image format if capture.images is set to true.
    # Available formats: jpg, gif, png, bmp, tga
    # 
    # Note: tga is much faster than the other image formats, but also has zero compression and takes huge amounts of data!
    S:images.format=png

    # Records frames from multiple render tiles for arbitrary resolutions when
    # enabled.
    # An example case would be to capture a movie in 4K/8K UHD resolution with a
    # normal full-HD display.
    # Note that the GUI and player view model can't be captured in this mode.
    # Additionally, some pixel shaders won't work correctly.
    # 
    # Warning: experimental feature, crashes and undesired side effects with other
    # mods are possible!
    B:tiled=false

    # Vertical capture resolution for tiled rendering in pixels. It is allowed to exceed the maximum
    # native resolution of the used screen and graphics card.
    I:tiled.height=2304

    # Horizontal capture resolution for tiled rendering in pixels. It is allowed to exceed the maximum
    # native resolution of the used screen and graphics card.
    I:tiled.width=4096
}


